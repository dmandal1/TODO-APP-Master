{"version":3,"sources":["/./$_lazy_route_resource lazy namespace object","/./src/app/app.component.html","/./src/app/header/header.component.html","/./src/app/login/login.component.html","/./src/app/notification/notification.component.html","/./src/app/resgister/resgister.component.html","/./src/app/todo-list/todo-list.component.html","/./src/app/todo/todo.component.html","/./src/app/app-routing.module.ts","/./src/app/app.component.scss","/./src/app/app.component.ts","/./src/app/app.module.ts","/./src/app/auth.guard.ts","/./src/app/auth.service.ts","/./src/app/header/header.component.scss","/./src/app/header/header.component.ts","/./src/app/login/login.component.scss","/./src/app/login/login.component.ts","/./src/app/notification/notification.component.scss","/./src/app/notification/notification.component.ts","/./src/app/resgister/resgister.component.scss","/./src/app/resgister/resgister.component.ts","/./src/app/todo-list/todo-list.component.scss","/./src/app/todo-list/todo-list.component.ts","/./src/app/todo.service.ts","/./src/app/todo/todo.component.scss","/./src/app/todo/todo.component.ts","/./src/app/token-interceptor.service.ts","/./src/environments/environment.ts","/./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-header></app-header>\\n<div class=\\\"container\\\">\\n   <router-outlet></router-outlet>\\n</div>\\n\"","module.exports = \"<nav>\\n   <ul *ngIf=\\\"authService.isUserLoggedIn()\\\">\\n      <li>\\n         <a (click)=\\\"userLogout()\\\">Logout</a>\\n      </li>\\n   </ul>\\n   <ul *ngIf=\\\"!authService.isUserLoggedIn()\\\">\\n      <li>\\n         <a routerLink=\\\"/user/login\\\">Login</a>\\n      </li>\\n      <li>\\n         <a routerLink=\\\"user/register\\\">Sign Up</a>\\n      </li>\\n   </ul>\\n</nav>\\n\"","module.exports = \"<div class=\\\"user-form\\\">\\n  <h1>Login</h1>\\n  <form>\\n    <input\\n      type=\\\"email\\\"\\n      name=\\\"email\\\"\\n      [(ngModel)]=\\\"email\\\"\\n      placeholder=\\\"Your Email\\\"\\n    />\\n    <input\\n      type=\\\"password\\\"\\n      name=\\\"password\\\"\\n      [(ngModel)]=\\\"password\\\"\\n      placeholder=\\\"Your Password\\\"\\n    />\\n    <button [disabled]=\\\"!email || !password\\\" (click)=\\\"saveUserData()\\\">\\n      Login\\n    </button>\\n  </form>\\n</div>\\n\"","module.exports = \"<p>notification works!</p>\\n\"","module.exports = \"<div class=\\\"user-form\\\">\\n   <h1>Sign Up</h1>\\n   <form>\\n      <input\\n         type=\\\"email\\\"\\n         name=\\\"email\\\"\\n         [(ngModel)]=\\\"email\\\"\\n         placeholder=\\\"Your Email\\\"\\n      />\\n      <input\\n         type=\\\"password\\\"\\n         name=\\\"password\\\"\\n         [(ngModel)]=\\\"password\\\"\\n         placeholder=\\\"Your Password\\\"\\n      />\\n      <button [disabled]=\\\"!email || !password\\\" (click)=\\\"saveUserData()\\\">\\n         Register\\n      </button>\\n   </form>\\n</div>\\n\"","module.exports = \"<div class=\\\"todo-item\\\">\\n   <p>{{ todo.todo }}</p>\\n   <button (click)=\\\"deleteTodo(todo._id)\\\" class=\\\"delete-btn\\\">X</button>\\n</div>\\n\"","module.exports = \"<div class=\\\"todo\\\">\\n   <form>\\n      <input\\n         type=\\\"text\\\"\\n         name=\\\"todo\\\"\\n         [(ngModel)]=\\\"todo\\\"\\n         placeholder=\\\"YOUR TODO\\\"\\n      />\\n      <button type=\\\"submit\\\" [disabled]=\\\"!todo\\\" (click)=\\\"saveTodo()\\\">\\n         Create Todo\\n      </button>\\n   </form>\\n</div>\\n<div class=\\\"todo-list\\\">\\n   <ul>\\n      <li *ngFor=\\\"let todo of todoService.todos\\\">\\n         <app-todo-list [todo]=\\\"todo\\\"></app-todo-list>\\n      </li>\\n   </ul>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ResgisterComponent } from './resgister/resgister.component';\nimport { LoginComponent } from './login/login.component';\nimport { TodoComponent } from './todo/todo.component';\nimport { AuthGuard } from './auth.guard';\n\nconst routes: Routes = [\n  { path: 'user/register', component: ResgisterComponent },\n  { path: 'user/login', component: LoginComponent },\n  { path: '', component: TodoComponent, canActivate: [AuthGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ResgisterComponent } from './resgister/resgister.component';\nimport { LoginComponent } from './login/login.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { TodoComponent } from './todo/todo.component';\nimport { TokenInterceptorService } from './token-interceptor.service';\nimport { TodoListComponent } from './todo-list/todo-list.component';\nimport { HeaderComponent } from './header/header.component';\nimport { NotificationComponent } from './notification/notification.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ResgisterComponent,\n    LoginComponent,\n    TodoComponent,\n    TodoListComponent,\n    HeaderComponent,\n    NotificationComponent\n  ],\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule, FormsModule],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n   providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n   constructor(private _authService: AuthService, private router: Router) {}\n   canActivate(): boolean {\n      if (this._authService.isUserLoggedIn()) {\n         return true;\n      } else {\n         this.router.navigate(['/user/login']);\n         return false;\n      }\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Observable, from } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable({\n   providedIn: 'root'\n})\nexport class AuthService {\n   private registerUrl = 'api/user/register';\n   private loginUrl = 'api/user/login';\n   private httpOptions = {\n      headers: new HttpHeaders({\n         'Content-Type': 'application/json'\n      })\n   };\n   constructor(private http: HttpClient, private router: Router) {}\n\n   registerUser(user): Observable<any> {\n      return this.http.post(this.registerUrl, user, this.httpOptions);\n   }\n\n   loginUser(user) {\n      this.http.post(this.loginUrl, user, this.httpOptions).subscribe(\n         res => {\n            localStorage.setItem('token', res['data']['token']);\n            this.router.navigate(['/']);\n         },\n         err => console.log(err)\n      );\n   }\n\n   isUserLoggedIn(): boolean {\n      return !!localStorage.getItem('token');\n   }\n\n   getToken() {\n      return localStorage.getItem('token') ? localStorage.getItem('token') : '';\n   }\n\n   logoutUser() {\n      localStorage.removeItem('token');\n      this.router.navigate(['/user/login']);\n   }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  constructor(public authService: AuthService) {}\n\n  ngOnInit() {}\n\n  userLogout() {\n    this.authService.logoutUser();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  email: string = '';\n  password: string = '';\n  constructor(private _authService: AuthService, private router: Router) {}\n\n  ngOnInit() {\n    if (this._authService.isUserLoggedIn()) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  saveUserData() {\n    let user = {\n      email: this.email,\n      password: this.password\n    };\n    this._authService.loginUser(user);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdGlmaWNhdGlvbi9ub3RpZmljYXRpb24uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.scss']\n})\nexport class NotificationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2dpc3Rlci9yZXNnaXN0ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-resgister',\n  templateUrl: './resgister.component.html',\n  styleUrls: ['./resgister.component.scss']\n})\nexport class ResgisterComponent implements OnInit {\n  email: string = '';\n  password: string = '';\n  constructor(private _authService: AuthService, private router: Router) {}\n\n  ngOnInit() {\n    if (this._authService.isUserLoggedIn()) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  saveUserData() {\n    let user = {\n      email: this.email,\n      password: this.password\n    };\n    this._authService.registerUser(user).subscribe(\n      data => {\n        console.log(data);\n      },\n      err => console.log(err)\n    );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RvZG8tbGlzdC90b2RvLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { TodoService } from '../todo.service';\n\n@Component({\n  selector: 'app-todo-list',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.scss']\n})\nexport class TodoListComponent implements OnInit {\n  @Input() todo;\n  constructor(private todoService: TodoService) {}\n\n  ngOnInit() {}\n\n  deleteTodo(id) {\n    this.todoService.deleteTodo(id);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable({\n   providedIn: 'root'\n})\nexport class TodoService {\n   private createTodoUrl: string = 'api/todo/create';\n   private getAllTodosUrl: string = 'api/todo/all';\n   private deleteTodoUrl: string = 'api/todo/delete';\n   private httpOptions = {\n      headers: new HttpHeaders({\n         'Content-Type': 'application/json'\n      })\n   };\n   todos = [];\n   constructor(private http: HttpClient, private router: Router) {}\n\n   createTodo(todo) {\n      this.http.post(this.createTodoUrl, todo, this.httpOptions).subscribe(\n         result => {\n            console.log(result);\n            this.getAllTodos();\n         },\n         err => {\n            console.log(err);\n         }\n      );\n   }\n\n   getAllTodos() {\n      this.http.get(this.getAllTodosUrl).subscribe(\n         result => {\n            this.todos = result['data']['todos'];\n         },\n         err => {\n            console.log(err.status);\n            if (err.status === 401) {\n               localStorage.removeItem('token');\n               this.router.navigateByUrl('/user/login/');\n            }\n         }\n      );\n   }\n\n   deleteTodo(id) {\n      this.http.delete(this.deleteTodoUrl + `/${id}`).subscribe(\n         res => {\n            console.log(res);\n            this.getAllTodos();\n         },\n         err => {\n            console.log(err);\n         }\n      );\n   }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RvZG8vdG9kby5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, OnChanges } from '@angular/core';\nimport { TodoService } from '../todo.service';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.scss']\n})\nexport class TodoComponent implements OnInit {\n  todo: string = '';\n  constructor(\n    public todoService: TodoService,\n    public _authService: AuthService,\n    public router: Router\n  ) {}\n\n  ngOnInit() {\n    this.todoService.getAllTodos();\n  }\n  saveTodo() {\n    let todoObj = {\n      todo: this.todo\n    };\n    this.todoService.createTodo(todoObj);\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler\n} from '@angular/common/http';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class TokenInterceptorService implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const tokenizedRequest = req.clone({\n      headers: req.headers.set('Authorization', this.authService.getToken())\n    });\n    return next.handle(tokenizedRequest);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n   production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}